name: Master Build

on:
  push:
    branches:
      - 'master'

env:
  REPOSITORY: "flip_fab"

concurrency: huxley-ci-${{ github.ref }}

jobs:
  Check_Semaphore:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Check Semaphore
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_check_semaphore.yml

  Build_Gem:
    runs-on: ubuntu-latest
    needs: [Check_Semaphore]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Build Gem
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_build_gem.yml

  Notify_Slack:
    runs-on: ubuntu-latest
    needs: [Build_Gem]
    if: ${{ failure() }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_LIVE_CICD_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LIVE_CICD_SECRET_ACCESS_KEY }}
          aws-region           : ${{ secrets.AWS_LIVE_CICD_REGION }}
      - name: Notify Slack
        uses: aws-actions/aws-codebuild-run-build@v1
        with:
          project-name: ${{ env.REPOSITORY }}
          buildspec-override: _pipeline/stage_notify.yml
